<script type="text/javascript">
$(function () {
// **************  functions for the custom elements in the add and edit forms for the feewhere element  **********
/******
function focusOther() {  $('input:radio[id=feewhere_other]').prop('checked', true);
 }
 window.focusOther = focusOther; //to allow testing from console
function myelem (value, options) { 
// var el = document.createElement("input");
 // el.type="radio";
 // el.value = value;
 // return el;
//}
var treaschecked =" ";
var preschecked= " ";
var otherchecked =" ";
var bankchecked = " ";
switch(value) {
	case 'Treasurer':
	case '':
	treaschecked ='checked';
	otherchecked =" ";
	break;
	case 'President':
	preschecked	='checked';
	break;
	case 'Bank':
	bankchecked	='checked';
	break;
	default:
	otherchecked ="checked";
	break;
	

}
********/
/************
if (value=='Treasurer'||value=='' ) {
treaschecked ='checked';
otherchecked =" ";
}
else if(value=='President'){
	preschecked	='checked';}
		else {
otherchecked ='checked';}
********/


//********  get current value of feewhere , if not selected set to Treasurer, otherwise set to existng value
/**********
//var elemStr = '<div><input id="'+options.id +'_treas" type="radio" size="10" name="fee" value="Treasurer" checked>Treasurer<br>'+
var elemStr = '<div><input id="'+options.id +'_treas" type="radio" size="10" name="fee" value="Treasurer" '+treaschecked+'  >Treasurer<br>'+  // no default
						'<input id="'+options.id +'_pres" type="radio" size="10" name="fee" value="President" '+preschecked+'  >President<br>'+
						'<input id="'+options.id +'_bank" type="radio" size="10" name="fee" value="Bank" '+bankchecked+'  >Bank<br>'+
						'<input id="'+options.id + '_other' +
                        '" type="radio" size="20" name="fee" value="other" '+otherchecked +'> Other  '+
						'<input id="'+options.id +'_text" type="text" size="20" name="feewhere" onfocus="focusOther()" value=	"'+value+'" ></div>';
          // return DOM element from jQuery object
          return $(elemStr)[0];
		  }
 
function myvalue(elem, operation, value) {
    if(operation === 'get') {
      // return $(elem).val();
	  var fred=$('input[id*="amtpaid"]').val();
	  var fred=$('input[id*="feewhere_text"]').val();
	 if( $('input:radio[name="fee"]:checked').val() =='other') return  fred;
		  else return $('input:radio[name="fee"]:checked').val();
    } else if(operation === 'set') {
       $('input',elem).val(value);
    }
}
function phoneelem (value, options) { 
//********  get current value of phone 
return $("<input type='text' size='10' value='"+value+"'/>");
}
function phonevalue(elem, operation, value) {
   if(operation === 'get') {
      // return $(elem).val();
	  var fred=$('input[id*="phone"][class="customelement"]').val();
	  if ( ~fred.indexOf("skype_c2c")  ) {   // its a skype click2call entry so strip out the actual phone number
	  // find the text '<span class="skype_c2c_text_span">'  the number follows  up to '</span>'  
	  var fred2 = fred.match(/<span class="skype_c2c_text_span">([\d\s]*)/)[1];

	  return fred2;
	  }

	 return fred;
	// return value.val();
/***	 if( $('input:radio[name="fee"]:checked').val() =='other') return  fred;
		  else return $('input:radio[name="fee"]:checked').val();
   } else if(operation === 'set') {
       $('input',elem).val(value);
    } **/ 
	/***
}function mobileelem (value, options) { 
//********  get current value of phone 
return $("<input type='text' size='10' value='"+value+"'/>");
}
function mobilevalue(elem, operation, value) {
   if(operation === 'get') {
      // return $(elem).val();
	  var fred=$('input[id*="mobile"][class="customelement"]').val();
	  if ( ~fred.indexOf("skype_c2c")  ) {   // its a skype click2call entry so strip out the actual phone number
	  // find the text '<span class="skype_c2c_text_span">'  the number follows  up to '</span>'  
	  var fred2 = fred.match(/<span class="skype_c2c_text_span">([\d\s]*)/)[1];

	  return fred2;
	  }

	 return fred;
	// return value.val();
/***	 if( $('input:radio[name="fee"]:checked').val() =='other') return  fred;
		  else return $('input:radio[name="fee"]:checked').val();
  **/ /**  } else if(operation === 'set') {
       $('input',elem).val(value);
    }
}
**/
var myrole= $('#myrole').text();
if (myrole == 'user') {myeditability=false;hidemoney=true;paideditability=false;
$("#bedit").hide();$("#badd").hide();$("#bdelr").hide();$("#bdelnr").hide();
}
else {myeditability=false; paideditability=false;hidemoney=false;} 


    $("#list").jqGrid({ 
     /*   url: "/eventgrid", 
		editurl:"/editevent",
        datatype: "xml",*/
		 url: "/eventgrid", 
		editurl:"/editevent",
        datatype: "json",
		jsonReader : {
		  root:"eventdata",
		  page: "currpage",
		  total: "totalpages",
		  records: "totalrecords",
		  repeatitems: false,
		  id: "0"
			},
		ignoreCase: true,
        mtype: "GET",
        colNames: ["","Event Name", "Event Date", "Event Contact", "Event Limit","Current Count","Full","","",""],//],
        colModel: [
           		{ name:"id",hidden:true},
			{ name: "event_name", width: 300,editable: myeditability, edittype:"text",
                            // show search options
                            searchoptions : {sopt: ["cn"] },  // ge = greater or equal to, le = less or equal to, eq = equal to  	
							editrules: { number: false, required: true}},
             {name: "event_date", width: 80,editable: myeditability, edittype:"text", editrules: { number: false, required: true}},
			 { name: "event_contact_email", width: 180,searchoptions : {sopt: ["cn"] }, searchrules:{integer:true},sorttype:'number'}, //  eq = equal to  	
			{ name: "event_limit", width: 85, align: "right",editable: myeditability, edittype:'custom',searchoptions : {sopt: ["eq"] } ,editrules:{custom:true,required:false}},
            { name: "event_current_count", width: 85, align: "right",editable: myeditability, edittype:'custom',editrules:{custom:true,required:false}},  
            { name: "event_full", width: 85, align: "right",editable: myeditability,searchoptions : {sopt: ["eq"] }, edittype:"text" ,editrules: { email: true, required: false},}, 
			{ name:"",hidden:true},
			{ name:"",hidden:true},
			{ name:"",hidden:true},
			 /**/
			
        ],
			pager: "#pager",
			page:1, //LEY

			onSelectRow: getDetail,
			rowNum: 10, 
			rowList: [10, 20, 30],
			sortname: "event_date",
			sortorder: "asc", 
			viewrecords: true,
			loadonce:true,  //LEY
			gridview: true,
			autoencode: true,
			caption: "",
			height:'auto',
			altRows: false,
			footerrow : true,
			userDataOnFooter : true,
			multiselect: false,
			ajaxRowOptions: { async: true },
			//cellEdit:true,
			// multikey: "ctrlKey", 
			loadComplete:function() {
			//var count = $("#list").jqGrid('getGridParam','reccount');
			//var myrole= $('#myrole').text();
			//var count = $('#list').jqGrid('getGridParam','data').length;
			
			},
	 
    });
	$('#list').jqGrid('navGrid','#pager',
		{ edit: false, add: false, del: false, search: false, refresh: true, view: false, position: "left", cloneToTop: false, },
		{afterSubmit: function(response, postdata) { $("#list").trigger("reloadGrid");return true;},
		//},		
		 beforeShowForm: function(form) { $('#tr_amtpaidthisyear', form).hide(); }  // for edit
		}, // use default settings for edit
		{dataheight:'550px',beforeShowForm: function(form) { $('#tr_amtpaidthisyear', form).show();$('#tr_paidthisyear', form).show(); }}, // use default settings for add
		{},  // refresh   //for delete
		{closeAfterAdd: true, 
                    recreateForm: true
				   }, // enable the advanced searching
		{closeOnEscape:true}
	

                  );
		$('#list').jqGrid('filterToolbar',{searchOperators: true,	});

	// detail grid
   /***     $("#jqGridDetails").jqGrid({
       url: "/app/views/attendeegrid/0", 
		editurl:"/editattendee",
        datatype: "json",
		jsonReader : {
		  root:"attendeedata",
		  page: "currpage",
		  total: "totalpages",
		  records: "totalrecords",
		  repeatitems: false,
		  id: "0"
			},
		ignoreCase: true,
        mtype: "GET",
        colNames: ["ID","Name", "Member No.", "Member\nPaid", "Member/Guest","Requester Email","Status","Comment","Requested at","",""],//],
        colModel: [
           { name:"id",hidden:true},
			{ name: "name", width: 160,editable: myeditability, edittype:"text",
                            // show search options
                            searchoptions : {sopt: ["cn"] },  // ge = greater or equal to, le = less or equal to, eq = equal to  	
							editrules: { number: false, required: true}},
             {name: "membnum", width: 80,editable: myeditability, edittype:"text", editrules: { number: false, required: true}},
			 { name: "member_paid", width:80,searchoptions : {sopt: ["cn"] }, searchrules:{integer:true},sorttype:'number'}, //  eq = equal to  	
			{ name: "member_guest", width: 85, align: "right",editable: myeditability, edittype:'custom',searchoptions : {sopt: ["eq"] } ,editrules:{custom:true,required:false}},
            { name: "requester_email", width: 85, align: "right",editable: myeditability, edittype:'custom',editrules:{custom:true,required:false}},  
            { name: "request_status", width: 85, align: "right",editable: myeditability,searchoptions : {sopt: ["eq"] }, edittype:"text" ,editrules: { email: true, required: false},}, 
            { name: "request_comment", width: 185, align: "right",editable: myeditability,searchoptions : {sopt: ["eq"] }, edittype:"text" ,editrules: { email: true, required: false},}, 
             { name: "created_at", width: 185, align: "right",editable: myeditability,searchoptions : {sopt: ["eq"] }, edittype:"text" ,editrules: { email: true, required: false},}, 

			{ name:"",hidden:true},
			{ name:"",hidden:true},
			
			
				],
			pager: "#pager2",
			page:1, //LEY

			//onSelectRow: editRow,
			rowNum: 10, 
			rowList: [10, 20, 30],
			sortname: "created_at",
			sortorder: "asc", 
			viewrecords: true,
			loadonce:true,  //LEY
			gridview: true,
			autoencode: true,
			caption: "",
			height:'auto',
			altRows: false,
			footerrow : true,
			//userDataOnFooter : true,
			multiselect: false,
			ajaxRowOptions: { async: true },
			//cellEdit:true,
			// multikey: "ctrlKey", 
			loadComplete:function() {
			//var count = $("#list").jqGrid('getGridParam','reccount');
			var myrole= $('#myrole').text();
			var count = $('#jqGridDetails').jqGrid('getGridParam','data').length;

			},


})	;	**/
            var lastSelection;
// use the onSelectRow that is triggered on row click to show a details grid	

function getDetail(rowid,selected) { var grid = $("#list");
					if(rowid != null) {
					xid= $("#list").jqGrid('getCell',rowid,'id');
					xname= $("#list").jqGrid('getCell',rowid,'event_name');

						jQuery("#tree2").jqGrid('setGridParam',{url: "data.json2/"+xid,datatype: 'json'}); // the last setting is for demo only
						jQuery('#tree2').jqGrid('clearGridData');
						//jQuery("#tree2").jqGrid('setGridParam',{datatype:'json', page:1}).trigger('reloadGrid');
						jQuery("#tree2").trigger("reloadGrid", { fromServer: true, page: 1 });
						jQuery("#tree2").jqGrid('setCaption', 'Attendees Grid for event::'+xname+' '+xid);
					}
		//		 grid.jqGrid('FormToGrid', id,'#FormPost');
		//		 grid.jqGrid('editRow',id, true,  '','','','',editreload); //rowid, keys, oneditfunc, successfunc, url, extraparam, aftersavefunc,errorfunc, afterrestorefunc
        //            lastSelection = id;
					//$("#"+id+"_formattedvalue").focus();
                
            }
/***********			
function editreload(rowid, result) {
			//get response and update the local grid for those values that are computed i.e. amtpaidthisyear
			$showit=$.parseJSON(result.responseText);
			grid.jqGrid('setCell', rowid, 'amtpaidthisyear', $showit.amtpaidthisyear);
			grid.jqGrid('setCell', rowid, 'paidthisyear', $showit.paidthisyear);
		$curpg=$('#list').getGridParam('page'); // current page
		//$("#list").trigger("reloadGrid", [{ page: $curpg}]); 
		reloadpage($curpg);
		}		
function reload(rowid, result) {
		$("#list").trigger("reloadGrid", [{ page: 1}]);
		}
function reloadpage(relpage) {
		$("#list").trigger("reloadGrid", [{ page: relpage}]);
		}
*******/
			
	
 var grid = $("#list");


		//***************  REFRESH BUTTON **********/
		/***
$("#cm1").click( function() { //Refresh
		var grid = $("#list");
		//$('grid').jqGrid('clearGridData');
		//$('grid').jqGrid('setGridParam', {data: dataToLoad});
		//
		  //var text = $("#searchText").val();
    var postdata = grid.jqGrid('getGridParam', 'postData');
    // build up the filter
    // ['equal','not equal', 'less', 'less or equal','greater','greater or equal', 'begins with','does not begin with','is in','is not in','ends with','does not end with','contains','does not contain']
    // ['eq','ne','lt','le','gt','ge','bw','bn','in','ni','ew','en','cn','nc']
    var myfilter =  '{"groupOp":"AND","rules":[{"field":"paidthisyear","op":"ne","data":"\'A\'"}]}';         
 

    $.extend(postdata, { filters: myfilter });
    grid.jqGrid('setGridParam', { search: false, postData: postdata,datatype:'json' });        
    grid.trigger("reloadGrid", [{ page: 1,datatype:'json'}]);
	//$("#list").setGridParam({datatype:'json', page:1}).trigger('reloadGrid');
	//$("grid").trigger("reloadGrid", [{ page: 1,datatype:'xml'}]);x
 
});
***/









	//jQuery("#list").jqGrid('delGridRow',gr,{dataheight:100,height:200,width:500,closeAfterEdit:true,});
	


/********
jQuery('#tree').jqGrid({
				"url":"data.json",
				"datatype":"json",
				"colModel":[
					{
						"name":"emp_id",
						"index":"emp_id",
						"sorttype":"int",
						"key":true,
						"hidden":true
					},{
						"name":"name",
						"index":"name",
						"sorttype":"string",
						"label":"Employee",
						"width":170
					},{
						"name":"salary",
						"index":"salary",
						"sorttype":"numeric",
						"label":"Salary",
						"align":"right",
						"width":90
					},{
						"name":"boss_id",
						"hidden":true
					}
				],
				"width":"780",
				"hoverrows":false,
				"viewrecords":false,
				"gridview":true,
				"height":"auto",
				"sortname":"emp_id",
				"scrollrows":true,
				
				"treeGrid":true,
				"ExpandColumn":"name",
				"treedatatype":"json",
				"treeGridModel":"adjacency",
				"loadonce":true,
				"rowNum":100,
				"treeReader":{
					"parent_id_field":"boss_id",
					"level_field":"level",
					"leaf_field":"isLeaf",
					"expanded_field":"expanded",
					"loaded":"loaded",
					"icon_field":"icon"
				},
				"pager":"#pager3"
			});	
			*********/
			
jQuery('#tree2').jqGrid({
				"url":"data.json2/0",
				"datatype":"json",
				"colModel":[
					{
						"name":"id",
						"index":"id",
						"sorttype":"int",
						"key":true,
						"hidden":true
					},{
						"name":"name",
						"index":"name",
						"sorttype":"string",
						"label":"Name",
						"width":170
					},{
						"name":"member_guest",
						"index":"member_guest",
						"sorttype":"text",
						"label":"member_guest",
						"align":"right",
						"width":90
					},{
						"name":"requester_id",
						"hidden":true
					}
				],
				"width":"780",
				"hoverrows":false,
				"viewrecords":false,
				"gridview":true,
				"height":"auto",
				"sortname":"emp_id",
				"scrollrows":true,
				
				"treeGrid":true,
				"ExpandColumn":"name",
				"treedatatype":"json",
				"treeGridModel":"adjacency",
				//"loadonce":true,
				"loadonce":false,
				"rowNum":100,
				"treeReader":{
					"parent_id_field":"requester_id",
					"level_field":"level",
					"leaf_field":"isLeaf",
					"expanded_field":"expanded",
					"loaded":"loaded",
					"icon_field":"icon"
				},
				"pager":"#pager4"
			});	
		
 
}); 


</script>
    <!-- contents of attend event/list.htm -->
	<table id="list"><tr><td></td></tr></table> 
    <div id="pager"></div> 
	<br>
 <!-- 		<table id="jqGridDetails"><tr><td></td></tr></table> 
    <div id="pager2"></div> 
	<br>
	    <table id="tree"></table> -->
    <div id="pager3"></div>	<br>
	    <table id="tree2"></table>
    <div id="pager4"></div>

   

 <!-- 	<input type="BUTTON" id="bedit" value="Edit Selected" /> &nbsp; &nbsp; &nbsp;<input type="BUTTON" id="badd" value="Add an Event" />&nbsp; &nbsp; &nbsp; -->	
<br>
<!-- 			<a href="javascript:void(0)" id="cm1">Refresh with NO Filter</a> -->

	<br>
<!-- 	U3AYear = {{@SESSION.u3ayear}}
 U3Astart month = {{@SESSION.u3astartmonth}} 
MJL1 start month = {{@SESSION.mjl1startmonth}}-->
	<input type="hidden" id="addeditdel" value="a" />
	